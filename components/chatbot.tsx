'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Send, MessageSquare, X } from 'lucide-react';\n\ninterface Message {\n  id: number;\n  text: string;\n  sender: 'user' | 'bot';\n}\n\nexport default function Chatbot() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([\n    { id: 1, text: 'Xin chào! Tôi có thể giúp gì cho bạn?', sender: 'bot' },\n  ]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const handleSend = () => {\n    if (input.trim()) {\n      const newUserMessage: Message = { id: Date.now(), text: input, sender: 'user' };\n      setMessages([...messages, newUserMessage]);\n      setInput('');\n      // Simple bot response logic (will be improved later)\n      setTimeout(() => {\n        const botResponse: Message = { id: Date.now() + 1, text: `Bạn vừa nói: "${input}"`, sender: 'bot' };\n        setMessages((prevMessages) => [...prevMessages, botResponse]);\n      }, 1000);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  return (\n    <>\n      <motion.button\n        initial={{ opacity: 0, scale: 0.5 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.3 }}\n        onClick={() => setIsOpen(!isOpen)}\n        className="fixed bottom-6 right-6 z-50 p-4 rounded-full bg-primary text-primary-foreground shadow-lg hover:bg-primary/90"\n      >\n        {isOpen ? <X className="h-6 w-6" /> : <MessageSquare className="h-6 w-6" />}\n      </motion.button>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0, y: 50, scale: 0.8 }}\n            animate={{ opacity: 1, y: 0, scale: 1 }}\n            exit={{ opacity: 0, y: 50, scale: 0.8 }}\n            transition={{ duration: 0.3 }}\n            className="fixed bottom-20 right-6 z-50 w-80 h-96 bg-card rounded-lg shadow-xl flex flex-col border"\n          >\n            <div className="p-4 border-b bg-primary text-primary-foreground rounded-t-lg">\n              <h3 className="text-lg font-semibold">FGuard Chatbot</h3>\n            </div>\n            <div className="flex-1 p-4 overflow-y-auto space-y-4">\n              {messages.map((msg) => (\n                <motion.div\n                  key={msg.id}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className={\`flex \${msg.sender === 'user' ? 'justify-end' : 'justify-start'}\`}\n                >\n                  <div\n                    className={\`rounded-lg p-3 max-w-[80%] \${\n                      msg.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'\n                    }\`}\n                  >\n                    {msg.text}\n                  </div>\n                </motion.div>\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n            <div className="p-4 border-t flex items-center">\n              <input\n                type="text"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyPress={handleKeyPress}\n                className="flex-1 px-4 py-2 rounded-l-md border border-r-0 bg-background focus:outline-none"\n                placeholder="Nhập tin nhắn..."\n              />\n              <button\n                onClick={handleSend}\n                className="p-2 rounded-r-md bg-primary text-primary-foreground hover:bg-primary/90"\n              >\n                <Send className="h-5 w-5" />\n              </button>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n} 